#!/bin/bash

DAY=`date +%_d`
n7d_day1=`date '+%d/%b' -d "+1 days"`
n7d_day2=`date '+%d/%b' -d "+2 days"`
n7d_day3=`date '+%d/%b' -d "+3 days"`
n7d_day4=`date '+%d/%b' -d "+4 days"`
n7d_day5=`date '+%d/%b' -d "+5 days"`
n7d_day6=`date '+%d/%b' -d "+6 days"`
n7d_day7=`date '+%d/%b' -d "+7 days"`
TEMPURL="https://tempoagora.uol.com.br/previsao-do-tempo/cidade/405/barueri-sp"
how_to_use ()
{
clear
echo "Run: myconky 'PARAMETER'"
echo ""
echo "pre - for preparation"
echo "use - for user-host"
echo "dis - for distro"
echo "ker - for kernel"
echo "upt - for uptime"
echo "pac - for packages"
echo "she - for shell"
echo "res - for resolution"
echo "env - for environment"
echo "win - for myndow manager"
echo "the - for theme"
echo "cpu - for cpu model"
echo "ctp - for cpu temperature"
echo "cfr - for cpu fan rotation"
echo "gpu - for gpu model"
echo "gtp - for gpu temperature"
echo "gfr - for gpu fan rotation"
echo "mbb - for motherboard brand"
echo "mob - for motherboard model"
echo "stp - for mobo temperature"
echo "sfr - for mobo fan rotation"
echo "gab - for tower temperature"
echo "tfr - for tower fan rotation"
echo "mem - for memory"
echo "msp - for memory speed"
echo "mty - for memory speed"
echo "msi - for memory speed"
echo "cal - for calendar"
echo "n7d - for next seven days"
echo "pip - for public ip"
echo "tmx - for max temperature"
echo "tmn - for min temperature"
echo "all - for full output"
}

julas23 ()
{
sudo apt install screenfetch ncal sensors curl netcat net-tools -y
#sudo tar zxvf brweather.tar.gz /opt/.
#mkdir ~/.brweather
#cp .brweather.conf ~/.brweather/.
#sudo rm -Rf /opt/brweather/brweather /usr/local/bin/brweather
#sudo rm -Rf /opt/Conky/myls.sh /usr/local/bin/myls
#sudo rm -Rf /opt/Conky/myconky /usr/local/bin/myconky
#sudo ln -s /opt/brweather/brweather /usr/local/bin/brweather
#sudo ln -s /opt/Conky/myls.sh /usr/local/bin/myls
#sudo ln -s /opt/Conky/myconky /usr/local/bin/myconky
#mkdir ~/.conky
#cp julas23 ~/.conky/julas23
#ln -s ~/.conky/juliano ~/.conkyrc
#touch ~/.todo
#nohup conky &
}

calen ()
{
LAR0=`date +%-d`; ncal -Mbh |sed '2d' |sed -e '1d' -e 's/\<'$LAR0'\>/${color red}&${color}/' |sed ':a;N;$!ba;s/\n/\n/g'
}

calen_wd ()
{
LAR1=`date +%-d`; ncal -Mbh |cut -c 1-15 |sed '2d' |sed -e '1d' -e 's/\<'$LAR1'\>/${color red}&${color}/' |sed ':a;N;$!ba;s/\n/\n/g'
}

calen_we ()
{
LAR2=`date +%-d`; ncal -Mbh |cut -c 16-22 |sed '2d' |sed -e '1d' -e 's/\<'$LAR2'\>/${color red}&${color}/' |sed ':a;N;$!ba;s/\n/\n/g'
}

if [[ -z "$1" ]]; then	how_to_use
elif [[ "$1" == "pre" ]]; then julas23									#preparation
elif [[ "$1" == "use" ]]; then screenfetch -nN |awk 'NR==1 {print $1}'					#user-host
elif [[ "$1" == "dis" ]]; then screenfetch -nN |awk 'NR==2 {print $2,$3,$4}'				#distro
elif [[ "$1" == "ker" ]]; then screenfetch -nN |awk 'NR==3 {print $2,$3,$4}'				#kernel
elif [[ "$1" == "upt" ]]; then screenfetch -nN |awk 'NR==4 {print $2,$3}'				#uptime
elif [[ "$1" == "pac" ]]; then screenfetch -nN |awk 'NR==5 {print $2}'					#packages
elif [[ "$1" == "she" ]]; then screenfetch -nN |awk 'NR==6 {print $2}'					#shell
elif [[ "$1" == "res" ]]; then screenfetch -nN |awk 'NR==7 {print $2}'					#resolution
elif [[ "$1" == "env" ]]; then screenfetch -nN |awk 'NR==8 {print $2,$3}'				#environment
elif [[ "$1" == "win" ]]; then screenfetch -nN |awk 'NR==9 {print $2,$3}'				#myndow manager
elif [[ "$1" == "the" ]]; then screenfetch -nN |awk 'NR==10 {print $3}'					#theme
elif [[ "$1" == "cpu" ]]; then screenfetch -nN |awk 'NR==15 {print $3,$4,$5}'				#cpu model
elif [[ "$1" == "ctp" ]]; then sensors |grep Tctl |awk '{print $2}'					#cpu temperature
elif [[ "$1" == "cfr" ]]; then echo "WaterCool"								#cpu fan rotation
elif [[ "$1" == "gpu" ]]; then screenfetch -nN |awk 'NR==16 {print $3,$4,$5,$6}'				#gpu model
elif [[ "$1" == "gtp" ]]; then sensors |grep Tctl |awk '{print $2}'					#gpu temperature
elif [[ "$1" == "gfr" ]]; then echo "WaterCool"								#gpu fan rotation
elif [[ "$1" == "mbb" ]]; then sudo dmidecode -t 2 |grep 'Manufacturer'	|awk '{print $2}'		#motherboard brand
elif [[ "$1" == "mob" ]]; then sudo dmidecode -t 2 |grep 'Product' |awk '{print $3}'			#motherboard model
elif [[ "$1" == "stp" ]]; then sensors |grep SYSTIN |awk '{print $2}'					#mobo temperature
elif [[ "$1" == "sfr" ]]; then sensors |grep fan1 |awk '{print $2}'					#mobo fan rotation
elif [[ "$1" == "gab" ]]; then sensors |grep AUXTIN3 |awk '{print $2}'					#tower temperature
elif [[ "$1" == "tfr" ]]; then sensors |grep fan2 |awk '{print $2}'					#tower fan rotation
elif [[ "$1" == "mem" ]]; then screenfetch -nN |awk 'NR==17 {print $5}'					#memory
elif [[ "$1" == "msp" ]]; then sudo dmidecode --type 17 |grep Speed: |awk 'NR==1 {print $2}'		#memory speed
elif [[ "$1" == "mty" ]]; then sudo dmidecode --type 17 |grep Type |awk 'NR==1 {print $2}'		#memory speed
elif [[ "$1" == "msi" ]]; then sudo dmidecode --type 17 |grep Size: |awk 'NR==1 {print $2,$3}'		#memory speed
elif [[ "$1" == "cal" ]]; then calen									#calendar full
elif [[ "$1" == "ca1" ]]; then calen_wd									#calendar workday
elif [[ "$1" == "ca2" ]]; then calen_we									#calendar weekend
elif [[ "$1" == "n7d" ]]; then next7days								#next seven days
elif [[ "$1" == "pip" ]]; then curl -s https://www.myexternalip.com/ |grep "<title>" |awk '{print $6}'	#public ip
elif [[ "$1" == "nd1" ]]; then echo $n7d_day1								#next day +1
elif [[ "$1" == "nd2" ]]; then echo $n7d_day2								#next day +2
elif [[ "$1" == "nd3" ]]; then echo $n7d_day3								#next day +3
elif [[ "$1" == "nd4" ]]; then echo $n7d_day4								#next day +4
elif [[ "$1" == "nd5" ]]; then echo $n7d_day5								#next day +5
elif [[ "$1" == "nd6" ]]; then echo $n7d_day6								#next day +6
elif [[ "$1" == "tmn" ]]; then curl $TEMPURL |grep min-temp-1 |cut -d">" -f 2 |cut -d"<" -f 1		#Min Temperature
elif [[ "$1" == "tmx" ]]; then curl $TEMPURL |grep max-temp-1 |cut -d">" -f 2 |cut -d"<" -f 1		#Max Temperature
elif [[ "$1" == "all" ]]; then screenfetch -nN								#full output
else
	how_to_use
fi
